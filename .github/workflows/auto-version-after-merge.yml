name: üöÄ Auto Version After Merge PR

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-version:
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Merge pull request') && !contains(github.event.head_commit.message, '[skip version]') && !contains(github.event.head_commit.message, 'chore(release)')
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}

    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.11.0'

    - name: üì¶ Install dependencies
      run: npm ci

    - name: üß™ Run tests
      run: npm test

    - name: üîç Run linting
      run: npm run lint

    - name: üîç Analyze merged PR commits
      id: analyze-commits
      run: |
        PR_NUMBER=$(echo "${{ github.event.head_commit.message }}" | grep -oP 'Merge pull request #\K\d+')
        echo "PR Number: $PR_NUMBER"

        if [ -z "$PR_NUMBER" ]; then
          echo "bump_type=patch" >> $GITHUB_OUTPUT
          echo "emoji=üü¢" >> $GITHUB_OUTPUT
          exit 0
        fi

        PR_COMMITS=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/commits" | jq -r '.[].commit.message')

        if echo "$PR_COMMITS" | grep -qE "(^feat(\(.+\))?!:|^fix(\(.+\))?!:|^refactor(\(.+\))?!:|BREAKING CHANGE)"; then
          echo "bump_type=major" >> $GITHUB_OUTPUT
          echo "emoji=üî¥" >> $GITHUB_OUTPUT
        elif echo "$PR_COMMITS" | grep -qE "(^feat(\(.+\))?:|feat:)"; then
          echo "bump_type=minor" >> $GITHUB_OUTPUT
          echo "emoji=üü°" >> $GITHUB_OUTPUT
        elif echo "$PR_COMMITS" | grep -qE "(^fix(\(.+\))?:|^perf(\(.+\))?:|^revert(\(.+\))?:|fix:|perf:)"; then
          echo "bump_type=patch" >> $GITHUB_OUTPUT
          echo "emoji=üü¢" >> $GITHUB_OUTPUT
        else
          echo "bump_type=patch" >> $GITHUB_OUTPUT
          echo "emoji=üü¢" >> $GITHUB_OUTPUT
        fi

    - name: üìà Update version in files
      id: update-version
      run: |
        BUMP_TYPE="${{ steps.analyze-commits.outputs.bump_type }}"
        npm version $BUMP_TYPE --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        
        # Update version in README.md badge
        sed -i "s/version-[0-9]\+\.[0-9]\+\.[0-9]\+-blue/version-$NEW_VERSION-blue/g" README.md
        
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: üè∑Ô∏è Create and push tag
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        NEW_VERSION="${{ steps.update-version.outputs.version }}"
        
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Fetch all tags to ensure we have the latest state
        git fetch --tags
        
        # Check if tag already exists locally or remotely
        if git tag -l "v$NEW_VERSION" | grep -q "v$NEW_VERSION"; then
          echo "Tag v$NEW_VERSION already exists locally, skipping tag creation"
        elif git ls-remote --tags origin | grep -q "refs/tags/v$NEW_VERSION"; then
          echo "Tag v$NEW_VERSION already exists on remote, skipping tag creation"
        else
          # Create and push the tag
          git tag -a "v$NEW_VERSION" -m "Release $NEW_VERSION"
          git push https://x-access-token:$PAT_TOKEN@github.com/${{ github.repository }} "v$NEW_VERSION"
          echo "Tag v$NEW_VERSION created and pushed successfully"
        fi
      
    - name: üîÅ Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.PAT_TOKEN }}
        commit-message: "chore(release): bump version to ${{ steps.update-version.outputs.version }} [skip ci]"
        branch: release/v${{ steps.update-version.outputs.version }}
        title: "${{ steps.analyze-commits.outputs.emoji }} Release v${{ steps.update-version.outputs.version }}"
        body: |
          ## üì¶ New Release: v${{ steps.update-version.outputs.version }}

          - **Type**: `${{ steps.analyze-commits.outputs.bump_type }}` ${{ steps.analyze-commits.outputs.emoji }}
          - Auto-generated after merging a PR into `main`.

          ### Changes
          - Version bumped from previous to `v${{ steps.update-version.outputs.version }}`
          - Updated `package.json` and `package-lock.json`
          - Updated version badge in README.md

          ---
          ‚úÖ Please review and merge to complete the release process.
        base: main
        delete-branch: true
        reviewers: |
          aminederouich
          mohamedaminederouich
        assignees: |
          aminederouich
        labels: |
          release
          ${{ steps.analyze-commits.outputs.bump_type }}
          auto-generated
