name: 🚀 Auto Version After Merge PR

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-version:
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Merge pull request') && !contains(github.event.head_commit.message, '[skip version]') && !contains(github.event.head_commit.message, 'chore(release)')
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.11.0'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🧪 Run tests
      run: npm test

    - name: 🔍 Run linting
      run: npm run lint

    - name: 🔍 Analyze merged PR commits
      id: analyze-commits
      run: |
        PR_NUMBER=$(echo "${{ github.event.head_commit.message }}" | grep -oP 'Merge pull request #\K\d+')
        echo "PR Number: $PR_NUMBER"

        if [ -z "$PR_NUMBER" ]; then
          echo "bump_type=patch" >> $GITHUB_OUTPUT
          echo "emoji=🟢" >> $GITHUB_OUTPUT
          exit 0
        fi

        PR_COMMITS=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/commits" | jq -r '.[].commit.message')

        if echo "$PR_COMMITS" | grep -qE "(^feat(\(.+\))?!:|^fix(\(.+\))?!:|^refactor(\(.+\))?!:|BREAKING CHANGE)"; then
          echo "bump_type=major" >> $GITHUB_OUTPUT
          echo "emoji=🔴" >> $GITHUB_OUTPUT
        elif echo "$PR_COMMITS" | grep -qE "(^feat(\(.+\))?:|feat:)"; then
          echo "bump_type=minor" >> $GITHUB_OUTPUT
          echo "emoji=🟡" >> $GITHUB_OUTPUT
        elif echo "$PR_COMMITS" | grep -qE "(^fix(\(.+\))?:|^perf(\(.+\))?:|^revert(\(.+\))?:|fix:|perf:)"; then
          echo "bump_type=patch" >> $GITHUB_OUTPUT
          echo "emoji=🟢" >> $GITHUB_OUTPUT
        else
          echo "bump_type=patch" >> $GITHUB_OUTPUT
          echo "emoji=🟢" >> $GITHUB_OUTPUT
        fi

    - name: 📈 Update version in files
      id: update-version
      run: |
        BUMP_TYPE="${{ steps.analyze-commits.outputs.bump_type }}"

        echo "🔍 Bump type = $BUMP_TYPE"

        # Bumper la version (cela donne ex: 1.0.6)
        NEW_VERSION=$(npm version $BUMP_TYPE --no-git-tag-version)

        # Nettoyage de la lettre "v" pour usage interne
        NEW_VERSION_CLEAN="${NEW_VERSION#v}"

        # Mise à jour du badge version dans README (même si déjà présent)
        sed -i "s/version-[0-9]\+\.[0-9]\+\.[0-9]\+-blue/version-$NEW_VERSION_CLEAN-blue/g" README.md || true

        # Forcer un changement si aucun fichier modifié
        if git diff --quiet; then
          echo "" >> README.md
          echo "🟡 Aucun vrai diff détecté, ligne vide ajoutée à README"
        fi

        echo "version=$NEW_VERSION_CLEAN" >> $GITHUB_OUTPUT

    - name: 🚀 Create release branch and push
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        NEW_VERSION="${{ steps.update-version.outputs.version }}"
        RELEASE_BRANCH="release/v$NEW_VERSION"

        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        git checkout -b "$RELEASE_BRANCH"

        git add package.json package-lock.json README.md
        git commit -m "chore(release): bump version to $NEW_VERSION [skip ci]"
        git tag -a "v$NEW_VERSION" -m "Release $NEW_VERSION"

        git push https://x-access-token:$PAT_TOKEN@github.com/${{ github.repository }} "$RELEASE_BRANCH"
        git push https://x-access-token:$PAT_TOKEN@github.com/${{ github.repository }} "v$NEW_VERSION"

    - name: 🌀 Fetch remote branches to avoid ambiguous revision error
      run: git fetch --all --prune
      
    - name: 🔁 Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.PAT_TOKEN }}
        commit-message: "chore(release): bump version to ${{ steps.update-version.outputs.version }} [skip ci]"
        branch: release/v${{ steps.update-version.outputs.version }}
        title: "🔁 Release v${{ steps.update-version.outputs.version }}"
        body: |
          ## 📦 New Release: v${{ steps.update-version.outputs.version }}

          - **Type**: `${{ steps.analyze-commits.outputs.bump_type }}`
          - Auto-generated after merging a PR into `main`.

          ---
          ✅ Please review and merge.
        base: main
