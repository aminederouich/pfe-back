# 🚀 Auto Version Bump via Pull Request
# 
# This workflow creates a pull request with version bumps instead of pushing directly
# to main branch. This approach works better with branch protection rules.
#
name: 🚀 Auto Version Bump (PR Method)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

permissions:
  contents: write
  pull-requests: write

jobs:
  version-bump-pr:
    if: github.event.pull_request.merged == true || (github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, 'chore: bump version'))
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.11.0'
        registry-url: 'https://registry.npmjs.org'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🧪 Run tests
      run: npm test
    
    - name: 🔍 Run linting
      run: npm run lint
    
    - name: ⚙️ Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
    
    - name: 🔍 Determine version bump type
      id: version-type
      run: |
        # Analyser les commits pour déterminer le type de bump
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # Pour les PR, analyser le titre et les commits de la PR
          PR_TITLE="${{ github.event.pull_request.title }}"
          COMMIT_MESSAGES=$(git log --pretty=format:"%s" origin/main..HEAD)
        else
          # Pour les push directs
          COMMIT_MESSAGES=$(git log --pretty=format:"%s" HEAD~1..HEAD)
        fi
        
        echo "Analyzing commit messages:"
        echo "$COMMIT_MESSAGES"
        
        if echo "$COMMIT_MESSAGES" | grep -iE "(breaking change|major:|BREAKING:|feat!|fix!|refactor!)"; then
          echo "🔴 MAJOR version bump detected"
          echo "bump_type=major" >> $GITHUB_OUTPUT
        elif echo "$COMMIT_MESSAGES" | grep -iE "(feat:|feature:|minor:)"; then
          echo "🟡 MINOR version bump detected"
          echo "bump_type=minor" >> $GITHUB_OUTPUT
        elif echo "$COMMIT_MESSAGES" | grep -iE "(fix:|bugfix:|patch:|perf:|docs:|style:|refactor:|test:|chore:)"; then
          echo "🟢 PATCH version bump detected"
          echo "bump_type=patch" >> $GITHUB_OUTPUT
        else
          echo "🟢 Default PATCH version bump"
          echo "bump_type=patch" >> $GITHUB_OUTPUT
        fi
    
    - name: 📈 Bump version
      run: |
        BUMP_TYPE="${{ steps.version-type.outputs.bump_type }}"
        echo "🚀 Bumping version with type: $BUMP_TYPE"
        
        # Sauvegarder la version actuelle
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "📊 Current version: $CURRENT_VERSION"
        
        # Bump la version
        npm version $BUMP_TYPE --no-git-tag-version
        
        # Afficher la nouvelle version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "✨ New version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
    
    - name: 🌿 Create version bump branch
      id: create-branch
      run: |
        NEW_VERSION=$(node -p "require('./package.json').version")
        BRANCH_NAME="auto-version-bump-v$NEW_VERSION"
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        git checkout -b "$BRANCH_NAME"
        echo "✅ Created branch: $BRANCH_NAME"
    
    - name: 💾 Commit version bump
      run: |
        NEW_VERSION=$(node -p "require('./package.json').version")
        git add package.json
        git commit -m "🔖 chore: bump version to $NEW_VERSION [skip ci]
        
        🤖 Auto-generated version bump
        📈 Type: ${{ steps.version-type.outputs.bump_type }}
        🏷️ Version: $NEW_VERSION"
    
    - name: 🚀 Push version bump branch
      run: |
        git push origin ${{ steps.create-branch.outputs.branch_name }}
        echo "✅ Successfully pushed branch: ${{ steps.create-branch.outputs.branch_name }}"
    
    - name: 📋 Create Pull Request
      uses: actions/github-script@v7
      with:
        script: |
          const newVersion = require('./package.json').version;
          const bumpType = '${{ steps.version-type.outputs.bump_type }}';
          const branchName = '${{ steps.create-branch.outputs.branch_name }}';
          
          const { data: pullRequest } = await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `🔖 chore: bump version to ${newVersion}`,
            head: branchName,
            base: 'main',
            body: `## 🤖 Automated Version Bump
          
          ### 📊 Version Information
          - **Previous Version**: Check package.json history
          - **New Version**: \`${newVersion}\`
          - **Bump Type**: \`${bumpType}\`
          - **Generated**: ${new Date().toISOString()}
          
          ### 🔄 Changes
          - Updated \`package.json\` version to \`${newVersion}\`
          - This PR was automatically generated based on conventional commit analysis
          
          ### 🚀 Next Steps
          1. Review the version bump
          2. Merge this PR to complete the release
          3. A GitHub release will be created automatically
          
          ---
          
          🤖 **Auto-generated by GitHub Actions**`,
            draft: false
          });
          
          console.log(`✅ Created PR #${pullRequest.number}: ${pullRequest.html_url}`);
          
          // Auto-merge if possible (requires branch protection settings to allow it)
          try {
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullRequest.number,
              commit_title: `🔖 chore: bump version to ${newVersion} [skip ci]`,
              commit_message: `Automated version bump from ${bumpType} to ${newVersion}`,
              merge_method: 'squash'
            });
            console.log(`✅ Auto-merged PR #${pullRequest.number}`);
          } catch (error) {
            console.log(`ℹ️ Could not auto-merge PR #${pullRequest.number}. Manual merge required.`);
            console.log(`Error: ${error.message}`);
          }
    
    - name: 🎊 Success notification
      run: |
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "🎉 SUCCESS! Version bump PR created!"
        echo "📦 New version: $NEW_VERSION"
        echo "🌿 Branch: ${{ steps.create-branch.outputs.branch_name }}"
        echo "🔗 Check PRs: https://github.com/${{ github.repository }}/pulls"
