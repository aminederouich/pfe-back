name: 🏷️ Create Release

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

permissions:
  contents: write
  actions: read

jobs:
  create-release:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.title, 'chore(release)')
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.11.0'

    - name: 📝 Get version from package.json
      id: package-version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "📦 Version from package.json: $VERSION"

    - name: ⚙️ Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"

    - name: 🏷️ Create and push Git tag
      run: |
        VERSION="${{ steps.package-version.outputs.version }}"
        TAG_NAME="v$VERSION"
        
        echo "Creating tag: $TAG_NAME"
        git tag -a "$TAG_NAME" -m "🚀 Release $TAG_NAME

        📋 Release Information:
        - Version: $VERSION
        - Generated: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        - Commit: ${{ github.sha }}
        
        🤖 This tag was automatically created by GitHub Actions"
        
        git push origin "$TAG_NAME"
        echo "✅ Successfully created and pushed tag: $TAG_NAME"

    - name: 📋 Generate release notes
      id: release-notes
      run: |
        VERSION="${{ steps.package-version.outputs.version }}"
        
        # Get the previous tag
        PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+' | head -2 | tail -1)
        if [ -z "$PREVIOUS_TAG" ]; then
          PREVIOUS_TAG="HEAD~10" # Fallback if no previous tag
        fi
        
        echo "Generating changelog from $PREVIOUS_TAG to HEAD"
        
        # Generate changelog
        CHANGELOG=$(git log "$PREVIOUS_TAG"..HEAD --oneline --pretty=format:"- %s (%h)" | head -20)
        
        if [ -z "$CHANGELOG" ]; then
          CHANGELOG="- Initial release"
        fi
        
        # Create release notes
        cat > release_notes.md << EOF
        ## 🎉 What's New in v$VERSION
        
        ### 📋 Changes
        $CHANGELOG
        
        ### 🛠️ Technical Details
        - **Version**: \`$VERSION\`
        - **Release Date**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        - **Commit**: \`${{ github.sha }}\`
        
        ### 🔗 Links
        - **Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...v$VERSION
        - **Repository**: https://github.com/${{ github.repository }}
        
        ---
        
        🤖 **This release was automatically generated by GitHub Actions**
        EOF
        
        echo "release_notes_file=release_notes.md" >> $GITHUB_OUTPUT

    - name: 🚀 Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.version }}
        release_name: 🚀 Release v${{ steps.package-version.outputs.version }}
        body_path: ${{ steps.release-notes.outputs.release_notes_file }}
        draft: false
        prerelease: false

    - name: 🎊 Release success notification
      run: |
        VERSION="${{ steps.package-version.outputs.version }}"
        echo "🎉 SUCCESS! Release v$VERSION created!"
        echo "🏷️ Git tag: v$VERSION"
        echo "📋 Release URL: https://github.com/${{ github.repository }}/releases/tag/v$VERSION"
        echo "📦 Package version: $VERSION"
        echo ""
        echo "🔗 Quick Links:"
        echo "   📋 Releases: https://github.com/${{ github.repository }}/releases"
        echo "   🏷️ Tags: https://github.com/${{ github.repository }}/tags"
        echo "   📊 Actions: https://github.com/${{ github.repository }}/actions"
